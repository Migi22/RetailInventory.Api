name: API Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-api:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: ${{ secrets.DB_PASSWORD }}
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install sqlcmd
        run: sudo apt-get update && sudo apt-get install -y mssql-tools18 unixodbc-dev
        env:
          ACCEPT_EULA: "Y"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Wait for SQL Server
        run: |
          for i in {1..20}; do
            /opt/mssql-tools18/bin/sqlcmd -S localhost,1433 -U sa -P "${{ secrets.DB_PASSWORD }}" -C -Q "SELECT 1" && break
            echo "SQL Server not ready yet..."
            sleep 5
          done

      - name: Install dotnet-ef
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Apply migrations
        run: dotnet ef database update --project RetailInventory.Api/RetailInventory.Api.csproj
        env:
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=RetailInventoryDB;User Id=sa;Password=${{ secrets.DB_PASSWORD }};TrustServerCertificate=True;"

      - name: Run API in background
        run: |
          dotnet run --project RetailInventory.Api/RetailInventory.Api.csproj --urls "http://0.0.0.0:5000" > api.log 2>&1 &
          sleep 20
        env:
          ASPNETCORE_ENVIRONMENT: Development
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=RetailInventoryDB;User Id=sa;Password=${{ secrets.DB_PASSWORD }};TrustServerCertificate=True;"
          Jwt_Key: ${{ secrets.JWT_KEY }}

      - name: Install Newman
        run: npm install -g newman

      - name: Wait for API
        run: |
          for i in {1..30}; do
            if curl -sSf http://localhost:5000/swagger > /dev/null; then
              echo "API is up!"
              exit 0
            fi
            echo "Waiting for API..."
            sleep 5
          done
          echo "API failed to start in time."
          exit 1

      - name: Run Postman Tests
        run: |
          newman run RetailInventory.Api/postman/Retail_Inventory_API.postman_collection.json --env-var baseUrl=http://localhost:5000

      # for debugging
      - name: Upload API logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-logs
          path: api.log

      - name: Show API logs
        run: cat api.log
